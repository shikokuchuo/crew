% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crew_client.R
\name{crew_class_client}
\alias{crew_class_client}
\title{\code{R6} client class.}
\description{
\code{R6} class for \code{mirai} clients.
}
\details{
See \code{\link[=crew_client]{crew_client()}}.
}
\examples{
if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
client <- crew_client()
client$start()
client$log()
client$terminate()
}

## ------------------------------------------------
## Method `crew_class_client$new`
## ------------------------------------------------

if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
client <- crew_client()
client$start()
client$log()
client$terminate()
}
}
\seealso{
Other client: 
\code{\link{crew_client}()}
}
\concept{client}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{name}}{See \code{\link[=crew_client]{crew_client()}}.}

\item{\code{host}}{See \code{\link[=crew_client]{crew_client()}}.}

\item{\code{port}}{See \code{\link[=crew_client]{crew_client()}}.}

\item{\code{tls}}{See \code{\link[=crew_client]{crew_client()}}.}

\item{\code{seconds_interval}}{See \code{\link[=crew_client]{crew_client()}}.}

\item{\code{seconds_timeout}}{See \code{\link[=crew_client]{crew_client()}}.}

\item{\code{relay}}{Relay object for event-driven programming on a downstream
condition variable.}

\item{\code{started}}{Whether the client is started.}

\item{\code{client}}{Process ID of the local process running the client.}

\item{\code{dispatcher}}{Process ID of the \code{mirai} dispatcher}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-crew_class_client-new}{\code{crew_class_client$new()}}
\item \href{#method-crew_class_client-validate}{\code{crew_class_client$validate()}}
\item \href{#method-crew_class_client-start}{\code{crew_class_client$start()}}
\item \href{#method-crew_class_client-terminate}{\code{crew_class_client$terminate()}}
\item \href{#method-crew_class_client-condition}{\code{crew_class_client$condition()}}
\item \href{#method-crew_class_client-resolved}{\code{crew_class_client$resolved()}}
\item \href{#method-crew_class_client-summary}{\code{crew_class_client$summary()}}
\item \href{#method-crew_class_client-url}{\code{crew_class_client$url()}}
\item \href{#method-crew_class_client-pids}{\code{crew_class_client$pids()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_client-new"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_client-new}{}}}
\subsection{Method \code{new()}}{
\code{mirai} client constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_client$new(
  name = NULL,
  host = NULL,
  port = NULL,
  tls = NULL,
  seconds_interval = NULL,
  seconds_timeout = NULL,
  relay = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Argument passed from \code{\link[=crew_client]{crew_client()}}.}

\item{\code{host}}{Argument passed from \code{\link[=crew_client]{crew_client()}}.}

\item{\code{port}}{Argument passed from \code{\link[=crew_client]{crew_client()}}.}

\item{\code{tls}}{Argument passed from \code{\link[=crew_client]{crew_client()}}.}

\item{\code{seconds_interval}}{Argument passed from \code{\link[=crew_client]{crew_client()}}.}

\item{\code{seconds_timeout}}{Argument passed from \code{\link[=crew_client]{crew_client()}}.}

\item{\code{relay}}{Argument passed from \code{\link[=crew_client]{crew_client()}}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An \code{R6} object with the client.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (identical(Sys.getenv("CREW_EXAMPLES"), "true")) {
client <- crew_client()
client$start()
client$log()
client$terminate()
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_client-validate"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_client-validate}{}}}
\subsection{Method \code{validate()}}{
Validate the client.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_client$validate()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_client-start"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_client-start}{}}}
\subsection{Method \code{start()}}{
Start listening for workers on the available sockets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_client$start()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_client-terminate"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_client-terminate}{}}}
\subsection{Method \code{terminate()}}{
Stop the mirai client and disconnect from the
worker websockets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_client$terminate()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_client-condition"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_client-condition}{}}}
\subsection{Method \code{condition()}}{
Get the \code{nanonext} condition variable which tasks signal
on resolution.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_client$condition()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The \code{nanonext} condition variable which tasks signal
on resolution. The return value is \code{NULL} if the client
is not running.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_client-resolved"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_client-resolved}{}}}
\subsection{Method \code{resolved()}}{
Get the true value of the \code{nanonext} condition variable.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_client$resolved()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The value of the \code{nanonext} condition variable.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_client-summary"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_client-summary}{}}}
\subsection{Method \code{summary()}}{
Show an informative worker log.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_client$summary()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \code{tibble} with one row and the following columns:
\itemize{
\item \code{awaiting}: number of tasks waiting to start.
\item \code{executing}: number of tasks currently running on workers.
\item \code{completed}: number of tasks completed.
\item \code{connections}: number of workers connected to the client.
\item \code{url}: websocket URL of the client.
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_client-url"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_client-url}{}}}
\subsection{Method \code{url()}}{
Return the client URL.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_client$url()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character string, client URL. Returns \code{NULL} if the
client has not started or has since terminated.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_client-pids"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_client-pids}{}}}
\subsection{Method \code{pids()}}{
Get the process IDs of the local process and the
\code{mirai} dispatcher (if started).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_client$pids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An integer vector of process IDs of the local process and the
\code{mirai} dispatcher (if started).
}
}
}
