% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crew_relay.R
\name{crew_class_relay}
\alias{crew_class_relay}
\title{\code{R6} relay class.}
\description{
\code{R6} class for relay configuration.
}
\details{
See \code{\link[=crew_relay]{crew_relay()}}.
}
\examples{
crew_relay()
}
\seealso{
Other class: 
\code{\link{crew_class_async}},
\code{\link{crew_class_client}},
\code{\link{crew_class_controller_group}},
\code{\link{crew_class_controller}},
\code{\link{crew_class_launcher}},
\code{\link{crew_class_tls}}
}
\concept{class}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{condition}}{\code{nanonext} condition variable that inherits
signals from \code{mirai::nextget("cv")}.}

\item{\code{unpopped}}{Number of observed unpopped tasks.}

\item{\code{popped}}{Number of observed popped tasks.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-crew_class_relay-validate}{\code{crew_class_relay$validate()}}
\item \href{#method-crew_class_relay-start}{\code{crew_class_relay$start()}}
\item \href{#method-crew_class_relay-from}{\code{crew_class_relay$from()}}
\item \href{#method-crew_class_relay-resolved}{\code{crew_class_relay$resolved()}}
\item \href{#method-crew_class_relay-pop}{\code{crew_class_relay$pop()}}
\item \href{#method-crew_class_relay-wait_condition}{\code{crew_class_relay$wait_condition()}}
\item \href{#method-crew_class_relay-wait_unpopped}{\code{crew_class_relay$wait_unpopped()}}
\item \href{#method-crew_class_relay-wait_resolved}{\code{crew_class_relay$wait_resolved()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_relay-validate"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_relay-validate}{}}}
\subsection{Method \code{validate()}}{
Validate the object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_relay$validate()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_relay-start"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_relay-start}{}}}
\subsection{Method \code{start()}}{
Initialize the relay object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_relay$start()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_relay-from"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_relay-from}{}}}
\subsection{Method \code{from()}}{
Forward signals from a different condition variable.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_relay$from(condition)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{condition}}{A \code{nanonext} condition variable which will forward
signals to \code{self$condition}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_relay-resolved"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_relay-resolved}{}}}
\subsection{Method \code{resolved()}}{
Count the total count of resolved tasks.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_relay$resolved()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Positive integer of length 1, total number of resolved tasks.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_relay-pop"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_relay-pop}{}}}
\subsection{Method \code{pop()}}{
Register a popped task.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_relay$pop()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_relay-wait_condition"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_relay-wait_condition}{}}}
\subsection{Method \code{wait_condition()}}{
Wait until an unobserved task resolves or the timeout
is reached.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_relay$wait_condition(seconds_timeout = Inf)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{seconds_timeout}}{Positive numeric of length 1,
Number of seconds to wait before timing out.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_relay-wait_unpopped"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_relay-wait_unpopped}{}}}
\subsection{Method \code{wait_unpopped()}}{
Wait until at least one task is available to be popped.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_relay$wait_unpopped(seconds_timeout = Inf)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{seconds_timeout}}{Positive numeric of length 1,
Number of seconds to wait before timing out.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-crew_class_relay-wait_resolved"></a>}}
\if{latex}{\out{\hypertarget{method-crew_class_relay-wait_resolved}{}}}
\subsection{Method \code{wait_resolved()}}{
Wait for until the number of
resolved tasks reaches a specified number.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{crew_class_relay$wait_resolved(seconds_timeout = Inf, resolved = 1L)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{seconds_timeout}}{Positive numeric of length 1,
Number of seconds to wait before timing out.}

\item{\code{resolved}}{Positive integer of length 1. This method waits
until the number of resolved tasks reaches this value or above.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} (invisibly).
}
}
}
